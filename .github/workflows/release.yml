name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: ${{ matrix.target }}
          components: clippy
          use-cross: true
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - run: |
          mkdir -p configs
          echo "RUST_LOG=info\nBDET_TOKEN=\nBDET_NICK=\nBDET_CHANNEL=\n" > configs/.env
          cp target/release/bot-detector bot-detector
          zip -qq -r archive.zip configs/ bot-detector
      - uses: actions/upload-artifact@v2
        with:
          name: nightly-${{ matrix.target }}
          path: archive.zip
  create_release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v2
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nightly-x86_64-unknown-linux-gnu/archive.zip
          asset_name: bot-detector-x86_64-unknown-linux-gnu.zip
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nightly-armv7-unknown-linux-gnueabihf/archive.zip
          asset_name: bot-detector-armv7-unknown-linux-gnueabihf.zip
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nightly-x86_64-pc-windows-gnu/archive.zip
          asset_name: bot-detector-x86_64-pc-windows-gnu.zip
          asset_content_type: application/octet-stream
